/*
* Copyright 2016 Red Hat, Inc. and/or its affiliates.
*  
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*  
*    http://www.apache.org/licenses/LICENSE-2.0
*  
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package $thePackage;

import org.wirez.core.api.factory.DefinitionSetBuilder;
#foreach ($p in $definitions)
import $p.pkg.$p.className;
#end

import javax.enterprise.context.ApplicationScoped;
import javax.inject.Inject;

@ApplicationScoped
public class $className implements DefinitionSetBuilder<$definitionSetClassName> {

    $definitionBuilderClassName bpmnDefinitionFactory;

    protected BPMNDefinitionSetBuilder() {
    }

    @Inject
    public BPMNDefinitionSetBuilder($definitionBuilderClassName bpmnDefinitionFactory) {
        this.bpmnDefinitionFactory = bpmnDefinitionFactory;
    }

    @Override
    public boolean accepts(final String id) {
        return id.equals($definitionSetClassName .ID);
    }

    @Override
    public $definitionSetClassName build(final String id) {

        return new $definitionSetClassName (

            #set( $counter = 0 )
            #foreach ($p in $definitions)
                bpmnDefinitionFactoryb.build$p.id ()
                #if ( $counter < ( $definitions.size() - 1 ) )
                ,
                #end
                #set( $counter = $counter + 1 )
            #end
        );
    }

}
